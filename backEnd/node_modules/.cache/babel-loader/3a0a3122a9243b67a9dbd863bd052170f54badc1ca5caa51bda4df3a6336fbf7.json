{"ast":null,"code":"const {\n  Pool,\n  TimeoutError\n} = require('tarn');\nconst {\n  EventEmitter\n} = require('events');\nconst {\n  promisify\n} = require('util');\nconst {\n  makeEscape\n} = require('./util/string');\nconst cloneDeep = require('lodash/cloneDeep');\nconst defaults = require('lodash/defaults');\nconst uniqueId = require('lodash/uniqueId');\nconst Runner = require('./execution/runner');\nconst Transaction = require('./execution/transaction');\nconst {\n  executeQuery,\n  enrichQueryObject\n} = require('./execution/internal/query-executioner');\nconst QueryBuilder = require('./query/querybuilder');\nconst QueryCompiler = require('./query/querycompiler');\nconst SchemaBuilder = require('./schema/builder');\nconst SchemaCompiler = require('./schema/compiler');\nconst TableBuilder = require('./schema/tablebuilder');\nconst TableCompiler = require('./schema/tablecompiler');\nconst ColumnBuilder = require('./schema/columnbuilder');\nconst ColumnCompiler = require('./schema/columncompiler');\nconst {\n  KnexTimeoutError\n} = require('./util/timeout');\nconst {\n  outputQuery,\n  unwrapRaw\n} = require('./formatter/wrappingFormatter');\nconst {\n  compileCallback\n} = require('./formatter/formatterUtils');\nconst Raw = require('./raw');\nconst Ref = require('./ref');\nconst Formatter = require('./formatter');\nconst Logger = require('./logger');\nconst {\n  POOL_CONFIG_OPTIONS\n} = require('./constants');\nconst ViewBuilder = require('./schema/viewbuilder.js');\nconst ViewCompiler = require('./schema/viewcompiler.js');\nconst isPlainObject = require('lodash/isPlainObject');\nconst {\n  setHiddenProperty\n} = require('./util/security.js');\nconst debug = require('debug')('knex:client');\n\n// The base client provides the general structure\n// for a dialect specific client object.\n\nclass Client extends EventEmitter {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.logger = new Logger(config);\n    if (this.config.connection && this.config.connection.password) {\n      setHiddenProperty(this.config.connection);\n    }\n\n    //Client is a required field, so throw error if it's not supplied.\n    //If 'this.dialect' is set, then this is a 'super()' call, in which case\n    //'client' does not have to be set as it's already assigned on the client prototype.\n\n    if (this.dialect && !this.config.client) {\n      this.logger.warn(`Using 'this.dialect' to identify the client is deprecated and support for it will be removed in the future. Please use configuration option 'client' instead.`);\n    }\n    const dbClient = this.config.client || this.dialect;\n    if (!dbClient) {\n      throw new Error(`knex: Required configuration option 'client' is missing.`);\n    }\n    if (config.version) {\n      this.version = config.version;\n    }\n    if (config.connection && config.connection instanceof Function) {\n      this.connectionConfigProvider = config.connection;\n      this.connectionConfigExpirationChecker = () => true; // causes the provider to be called on first use\n    } else {\n      this.connectionSettings = cloneDeep(config.connection || {});\n      if (config.connection && config.connection.password) {\n        setHiddenProperty(this.connectionSettings, config.connection);\n      }\n      this.connectionConfigExpirationChecker = null;\n    }\n    if (this.driverName && config.connection) {\n      this.initializeDriver();\n      if (!config.pool || config.pool && config.pool.max !== 0) {\n        this.initializePool(config);\n      }\n    }\n    this.valueForUndefined = this.raw('DEFAULT');\n    if (config.useNullAsDefault) {\n      this.valueForUndefined = null;\n    }\n  }\n  formatter(builder) {\n    return new Formatter(this, builder);\n  }\n  queryBuilder() {\n    return new QueryBuilder(this);\n  }\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n  schemaBuilder() {\n    return new SchemaBuilder(this);\n  }\n  schemaCompiler(builder) {\n    return new SchemaCompiler(this, builder);\n  }\n  tableBuilder(type, tableName, tableNameLike, fn) {\n    return new TableBuilder(this, type, tableName, tableNameLike, fn);\n  }\n  viewBuilder(type, viewBuilder, fn) {\n    return new ViewBuilder(this, type, viewBuilder, fn);\n  }\n  tableCompiler(tableBuilder) {\n    return new TableCompiler(this, tableBuilder);\n  }\n  viewCompiler(viewCompiler) {\n    return new ViewCompiler(this, viewCompiler);\n  }\n  columnBuilder(tableBuilder, type, args) {\n    return new ColumnBuilder(this, tableBuilder, type, args);\n  }\n  columnCompiler(tableBuilder, columnBuilder) {\n    return new ColumnCompiler(this, tableBuilder, columnBuilder);\n  }\n  runner(builder) {\n    return new Runner(this, builder);\n  }\n  transaction(container, config, outerTx) {\n    return new Transaction(this, container, config, outerTx);\n  }\n  raw() {\n    return new Raw(this).set(...arguments);\n  }\n  ref() {\n    return new Ref(this, ...arguments);\n  }\n  query(connection, queryParam) {\n    const queryObject = enrichQueryObject(connection, queryParam, this);\n    return executeQuery(connection, queryObject, this);\n  }\n  stream(connection, queryParam, stream, options) {\n    const queryObject = enrichQueryObject(connection, queryParam, this);\n    return this._stream(connection, queryObject, stream, options);\n  }\n  prepBindings(bindings) {\n    return bindings;\n  }\n  positionBindings(sql) {\n    return sql;\n  }\n  postProcessResponse(resp, queryContext) {\n    if (this.config.postProcessResponse) {\n      return this.config.postProcessResponse(resp, queryContext);\n    }\n    return resp;\n  }\n  wrapIdentifier(value, queryContext) {\n    return this.customWrapIdentifier(value, this.wrapIdentifierImpl, queryContext);\n  }\n  customWrapIdentifier(value, origImpl, queryContext) {\n    if (this.config.wrapIdentifier) {\n      return this.config.wrapIdentifier(value, origImpl, queryContext);\n    }\n    return origImpl(value);\n  }\n  wrapIdentifierImpl(value) {\n    return value !== '*' ? `\"${value.replace(/\"/g, '\"\"')}\"` : '*';\n  }\n  initializeDriver() {\n    try {\n      this.driver = this._driver();\n    } catch (e) {\n      const message = `Knex: run\\n$ npm install ${this.driverName} --save`;\n      this.logger.error(`${message}\\n${e.message}\\n${e.stack}`);\n      throw new Error(`${message}\\n${e.message}`);\n    }\n  }\n  poolDefaults() {\n    return {\n      min: 2,\n      max: 10,\n      propagateCreateError: true\n    };\n  }\n  getPoolSettings(poolConfig) {\n    poolConfig = defaults({}, poolConfig, this.poolDefaults());\n    POOL_CONFIG_OPTIONS.forEach(option => {\n      if (option in poolConfig) {\n        this.logger.warn([`Pool config option \"${option}\" is no longer supported.`, `See https://github.com/Vincit/tarn.js for possible pool config options.`].join(' '));\n      }\n    });\n    const DEFAULT_ACQUIRE_TIMEOUT = 60000;\n    const timeouts = [this.config.acquireConnectionTimeout, poolConfig.acquireTimeoutMillis].filter(timeout => timeout !== undefined);\n    if (!timeouts.length) {\n      timeouts.push(DEFAULT_ACQUIRE_TIMEOUT);\n    }\n\n    // acquire connection timeout can be set on config or config.pool\n    // choose the smallest, positive timeout setting and set on poolConfig\n    poolConfig.acquireTimeoutMillis = Math.min(...timeouts);\n    const updatePoolConnectionSettingsFromProvider = async () => {\n      if (!this.connectionConfigProvider) {\n        return; // static configuration, nothing to update\n      }\n      if (!this.connectionConfigExpirationChecker || !this.connectionConfigExpirationChecker()) {\n        return; // not expired, reuse existing connection\n      }\n      const providerResult = await this.connectionConfigProvider();\n      if (providerResult.expirationChecker) {\n        this.connectionConfigExpirationChecker = providerResult.expirationChecker;\n        delete providerResult.expirationChecker; // MySQL2 driver warns on receiving extra properties\n      } else {\n        this.connectionConfigExpirationChecker = null;\n      }\n      this.connectionSettings = providerResult;\n    };\n    return Object.assign(poolConfig, {\n      create: async () => {\n        await updatePoolConnectionSettingsFromProvider();\n        const connection = await this.acquireRawConnection();\n        connection.__knexUid = uniqueId('__knexUid');\n        if (poolConfig.afterCreate) {\n          await promisify(poolConfig.afterCreate)(connection);\n        }\n        return connection;\n      },\n      destroy: connection => {\n        if (connection !== void 0) {\n          return this.destroyRawConnection(connection);\n        }\n      },\n      validate: connection => {\n        if (connection.__knex__disposed) {\n          this.logger.warn(`Connection Error: ${connection.__knex__disposed}`);\n          return false;\n        }\n        return this.validateConnection(connection);\n      }\n    });\n  }\n  initializePool(config = this.config) {\n    if (this.pool) {\n      this.logger.warn('The pool has already been initialized');\n      return;\n    }\n    const tarnPoolConfig = {\n      ...this.getPoolSettings(config.pool)\n    };\n    // afterCreate is an internal knex param, tarn.js does not support it\n    if (tarnPoolConfig.afterCreate) {\n      delete tarnPoolConfig.afterCreate;\n    }\n    this.pool = new Pool(tarnPoolConfig);\n  }\n  validateConnection(connection) {\n    return true;\n  }\n\n  // Acquire a connection from the pool.\n  async acquireConnection() {\n    if (!this.pool) {\n      throw new Error('Unable to acquire a connection');\n    }\n    try {\n      const connection = await this.pool.acquire().promise;\n      debug('acquired connection from pool: %s', connection.__knexUid);\n      if (connection.config) {\n        if (connection.config.password) {\n          setHiddenProperty(connection.config);\n        }\n        if (connection.config.authentication && connection.config.authentication.options && connection.config.authentication.options.password) {\n          setHiddenProperty(connection.config.authentication.options);\n        }\n      }\n      return connection;\n    } catch (error) {\n      let convertedError = error;\n      if (error instanceof TimeoutError) {\n        convertedError = new KnexTimeoutError('Knex: Timeout acquiring a connection. The pool is probably full. ' + 'Are you missing a .transacting(trx) call?');\n      }\n      throw convertedError;\n    }\n  }\n\n  // Releases a connection back to the connection pool,\n  // returning a promise resolved when the connection is released.\n  releaseConnection(connection) {\n    debug('releasing connection to pool: %s', connection.__knexUid);\n    const didRelease = this.pool.release(connection);\n    if (!didRelease) {\n      debug('pool refused connection: %s', connection.__knexUid);\n    }\n    return Promise.resolve();\n  }\n\n  // Destroy the current connection pool for the client.\n  async destroy(callback) {\n    try {\n      if (this.pool && this.pool.destroy) {\n        await this.pool.destroy();\n      }\n      this.pool = undefined;\n      if (typeof callback === 'function') {\n        callback();\n      }\n    } catch (err) {\n      if (typeof callback === 'function') {\n        return callback(err);\n      }\n      throw err;\n    }\n  }\n\n  // Return the database being used by this client.\n  database() {\n    return this.connectionSettings.database;\n  }\n  toString() {\n    return '[object KnexClient]';\n  }\n  assertCanCancelQuery() {\n    if (!this.canCancelQuery) {\n      throw new Error('Query cancelling not supported for this dialect');\n    }\n  }\n  cancelQuery() {\n    throw new Error('Query cancelling not supported for this dialect');\n  }\n\n  // Formatter part\n\n  alias(first, second) {\n    return first + ' as ' + second;\n  }\n\n  // Checks whether a value is a function... if it is, we compile it\n  // otherwise we check whether it's a raw\n  parameter(value, builder, bindingsHolder) {\n    if (typeof value === 'function') {\n      return outputQuery(compileCallback(value, undefined, this, bindingsHolder), true, builder, this);\n    }\n    return unwrapRaw(value, true, builder, this, bindingsHolder) || '?';\n  }\n\n  // Turns a list of values into a list of ?'s, joining them with commas unless\n  // a \"joining\" value is specified (e.g. ' and ')\n  parameterize(values, notSetValue, builder, bindingsHolder) {\n    if (typeof values === 'function') return this.parameter(values, builder, bindingsHolder);\n    values = Array.isArray(values) ? values : [values];\n    let str = '',\n      i = -1;\n    while (++i < values.length) {\n      if (i > 0) str += ', ';\n      let value = values[i];\n      // json columns can have object in values.\n      if (isPlainObject(value)) {\n        value = JSON.stringify(value);\n      }\n      str += this.parameter(value === undefined ? notSetValue : value, builder, bindingsHolder);\n    }\n    return str;\n  }\n\n  // Formats `values` into a parenthesized list of parameters for a `VALUES`\n  // clause.\n  //\n  // [1, 2]                  -> '(?, ?)'\n  // [[1, 2], [3, 4]]        -> '((?, ?), (?, ?))'\n  // knex('table')           -> '(select * from \"table\")'\n  // knex.raw('select ?', 1) -> '(select ?)'\n  //\n  values(values, builder, bindingsHolder) {\n    if (Array.isArray(values)) {\n      if (Array.isArray(values[0])) {\n        return `(${values.map(value => `(${this.parameterize(value, undefined, builder, bindingsHolder)})`).join(', ')})`;\n      }\n      return `(${this.parameterize(values, undefined, builder, bindingsHolder)})`;\n    }\n    if (values && values.isRawInstance) {\n      return `(${this.parameter(values, builder, bindingsHolder)})`;\n    }\n    return this.parameter(values, builder, bindingsHolder);\n  }\n  processPassedConnection(connection) {\n    // Default implementation is noop\n  }\n  toPathForJson(jsonPath) {\n    // By default, we want a json path, so if this function is not overriden,\n    // we return the path.\n    return jsonPath;\n  }\n}\nObject.assign(Client.prototype, {\n  _escapeBinding: makeEscape({\n    escapeString(str) {\n      return `'${str.replace(/'/g, \"''\")}'`;\n    }\n  }),\n  canCancelQuery: false\n});\nmodule.exports = Client;","map":{"version":3,"names":["Pool","TimeoutError","require","EventEmitter","promisify","makeEscape","cloneDeep","defaults","uniqueId","Runner","Transaction","executeQuery","enrichQueryObject","QueryBuilder","QueryCompiler","SchemaBuilder","SchemaCompiler","TableBuilder","TableCompiler","ColumnBuilder","ColumnCompiler","KnexTimeoutError","outputQuery","unwrapRaw","compileCallback","Raw","Ref","Formatter","Logger","POOL_CONFIG_OPTIONS","ViewBuilder","ViewCompiler","isPlainObject","setHiddenProperty","debug","Client","constructor","config","logger","connection","password","dialect","client","warn","dbClient","Error","version","Function","connectionConfigProvider","connectionConfigExpirationChecker","connectionSettings","driverName","initializeDriver","pool","max","initializePool","valueForUndefined","raw","useNullAsDefault","formatter","builder","queryBuilder","queryCompiler","schemaBuilder","schemaCompiler","tableBuilder","type","tableName","tableNameLike","fn","viewBuilder","tableCompiler","viewCompiler","columnBuilder","args","columnCompiler","runner","transaction","container","outerTx","set","arguments","ref","query","queryParam","queryObject","stream","options","_stream","prepBindings","bindings","positionBindings","sql","postProcessResponse","resp","queryContext","wrapIdentifier","value","customWrapIdentifier","wrapIdentifierImpl","origImpl","replace","driver","_driver","e","message","error","stack","poolDefaults","min","propagateCreateError","getPoolSettings","poolConfig","forEach","option","join","DEFAULT_ACQUIRE_TIMEOUT","timeouts","acquireConnectionTimeout","acquireTimeoutMillis","filter","timeout","undefined","length","push","Math","updatePoolConnectionSettingsFromProvider","providerResult","expirationChecker","Object","assign","create","acquireRawConnection","__knexUid","afterCreate","destroy","destroyRawConnection","validate","__knex__disposed","validateConnection","tarnPoolConfig","acquireConnection","acquire","promise","authentication","convertedError","releaseConnection","didRelease","release","Promise","resolve","callback","err","database","toString","assertCanCancelQuery","canCancelQuery","cancelQuery","alias","first","second","parameter","bindingsHolder","parameterize","values","notSetValue","Array","isArray","str","i","JSON","stringify","map","isRawInstance","processPassedConnection","toPathForJson","jsonPath","prototype","_escapeBinding","escapeString","module","exports"],"sources":["C:/Users/momo1/Documents/@DevPerso/Beacon/node_modules/knex/lib/client.js"],"sourcesContent":["const { Pool, TimeoutError } = require('tarn');\nconst { EventEmitter } = require('events');\nconst { promisify } = require('util');\nconst { makeEscape } = require('./util/string');\nconst cloneDeep = require('lodash/cloneDeep');\nconst defaults = require('lodash/defaults');\nconst uniqueId = require('lodash/uniqueId');\n\nconst Runner = require('./execution/runner');\nconst Transaction = require('./execution/transaction');\nconst {\n  executeQuery,\n  enrichQueryObject,\n} = require('./execution/internal/query-executioner');\nconst QueryBuilder = require('./query/querybuilder');\nconst QueryCompiler = require('./query/querycompiler');\nconst SchemaBuilder = require('./schema/builder');\nconst SchemaCompiler = require('./schema/compiler');\nconst TableBuilder = require('./schema/tablebuilder');\nconst TableCompiler = require('./schema/tablecompiler');\nconst ColumnBuilder = require('./schema/columnbuilder');\nconst ColumnCompiler = require('./schema/columncompiler');\nconst { KnexTimeoutError } = require('./util/timeout');\nconst { outputQuery, unwrapRaw } = require('./formatter/wrappingFormatter');\nconst { compileCallback } = require('./formatter/formatterUtils');\nconst Raw = require('./raw');\nconst Ref = require('./ref');\nconst Formatter = require('./formatter');\nconst Logger = require('./logger');\nconst { POOL_CONFIG_OPTIONS } = require('./constants');\nconst ViewBuilder = require('./schema/viewbuilder.js');\nconst ViewCompiler = require('./schema/viewcompiler.js');\nconst isPlainObject = require('lodash/isPlainObject');\nconst { setHiddenProperty } = require('./util/security.js');\n\nconst debug = require('debug')('knex:client');\n\n// The base client provides the general structure\n// for a dialect specific client object.\n\nclass Client extends EventEmitter {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.logger = new Logger(config);\n\n    if (this.config.connection && this.config.connection.password) {\n      setHiddenProperty(this.config.connection);\n    }\n\n    //Client is a required field, so throw error if it's not supplied.\n    //If 'this.dialect' is set, then this is a 'super()' call, in which case\n    //'client' does not have to be set as it's already assigned on the client prototype.\n\n    if (this.dialect && !this.config.client) {\n      this.logger.warn(\n        `Using 'this.dialect' to identify the client is deprecated and support for it will be removed in the future. Please use configuration option 'client' instead.`\n      );\n    }\n\n    const dbClient = this.config.client || this.dialect;\n    if (!dbClient) {\n      throw new Error(\n        `knex: Required configuration option 'client' is missing.`\n      );\n    }\n\n    if (config.version) {\n      this.version = config.version;\n    }\n\n    if (config.connection && config.connection instanceof Function) {\n      this.connectionConfigProvider = config.connection;\n      this.connectionConfigExpirationChecker = () => true; // causes the provider to be called on first use\n    } else {\n      this.connectionSettings = cloneDeep(config.connection || {});\n      if (config.connection && config.connection.password) {\n        setHiddenProperty(this.connectionSettings, config.connection);\n      }\n      this.connectionConfigExpirationChecker = null;\n    }\n    if (this.driverName && config.connection) {\n      this.initializeDriver();\n      if (!config.pool || (config.pool && config.pool.max !== 0)) {\n        this.initializePool(config);\n      }\n    }\n    this.valueForUndefined = this.raw('DEFAULT');\n    if (config.useNullAsDefault) {\n      this.valueForUndefined = null;\n    }\n  }\n  formatter(builder) {\n    return new Formatter(this, builder);\n  }\n\n  queryBuilder() {\n    return new QueryBuilder(this);\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  schemaBuilder() {\n    return new SchemaBuilder(this);\n  }\n\n  schemaCompiler(builder) {\n    return new SchemaCompiler(this, builder);\n  }\n\n  tableBuilder(type, tableName, tableNameLike, fn) {\n    return new TableBuilder(this, type, tableName, tableNameLike, fn);\n  }\n\n  viewBuilder(type, viewBuilder, fn) {\n    return new ViewBuilder(this, type, viewBuilder, fn);\n  }\n\n  tableCompiler(tableBuilder) {\n    return new TableCompiler(this, tableBuilder);\n  }\n\n  viewCompiler(viewCompiler) {\n    return new ViewCompiler(this, viewCompiler);\n  }\n\n  columnBuilder(tableBuilder, type, args) {\n    return new ColumnBuilder(this, tableBuilder, type, args);\n  }\n\n  columnCompiler(tableBuilder, columnBuilder) {\n    return new ColumnCompiler(this, tableBuilder, columnBuilder);\n  }\n\n  runner(builder) {\n    return new Runner(this, builder);\n  }\n\n  transaction(container, config, outerTx) {\n    return new Transaction(this, container, config, outerTx);\n  }\n\n  raw() {\n    return new Raw(this).set(...arguments);\n  }\n\n  ref() {\n    return new Ref(this, ...arguments);\n  }\n  query(connection, queryParam) {\n    const queryObject = enrichQueryObject(connection, queryParam, this);\n    return executeQuery(connection, queryObject, this);\n  }\n\n  stream(connection, queryParam, stream, options) {\n    const queryObject = enrichQueryObject(connection, queryParam, this);\n    return this._stream(connection, queryObject, stream, options);\n  }\n\n  prepBindings(bindings) {\n    return bindings;\n  }\n\n  positionBindings(sql) {\n    return sql;\n  }\n\n  postProcessResponse(resp, queryContext) {\n    if (this.config.postProcessResponse) {\n      return this.config.postProcessResponse(resp, queryContext);\n    }\n    return resp;\n  }\n\n  wrapIdentifier(value, queryContext) {\n    return this.customWrapIdentifier(\n      value,\n      this.wrapIdentifierImpl,\n      queryContext\n    );\n  }\n\n  customWrapIdentifier(value, origImpl, queryContext) {\n    if (this.config.wrapIdentifier) {\n      return this.config.wrapIdentifier(value, origImpl, queryContext);\n    }\n    return origImpl(value);\n  }\n\n  wrapIdentifierImpl(value) {\n    return value !== '*' ? `\"${value.replace(/\"/g, '\"\"')}\"` : '*';\n  }\n\n  initializeDriver() {\n    try {\n      this.driver = this._driver();\n    } catch (e) {\n      const message = `Knex: run\\n$ npm install ${this.driverName} --save`;\n      this.logger.error(`${message}\\n${e.message}\\n${e.stack}`);\n      throw new Error(`${message}\\n${e.message}`);\n    }\n  }\n\n  poolDefaults() {\n    return { min: 2, max: 10, propagateCreateError: true };\n  }\n\n  getPoolSettings(poolConfig) {\n    poolConfig = defaults({}, poolConfig, this.poolDefaults());\n\n    POOL_CONFIG_OPTIONS.forEach((option) => {\n      if (option in poolConfig) {\n        this.logger.warn(\n          [\n            `Pool config option \"${option}\" is no longer supported.`,\n            `See https://github.com/Vincit/tarn.js for possible pool config options.`,\n          ].join(' ')\n        );\n      }\n    });\n\n    const DEFAULT_ACQUIRE_TIMEOUT = 60000;\n    const timeouts = [\n      this.config.acquireConnectionTimeout,\n      poolConfig.acquireTimeoutMillis,\n    ].filter((timeout) => timeout !== undefined);\n\n    if (!timeouts.length) {\n      timeouts.push(DEFAULT_ACQUIRE_TIMEOUT);\n    }\n\n    // acquire connection timeout can be set on config or config.pool\n    // choose the smallest, positive timeout setting and set on poolConfig\n    poolConfig.acquireTimeoutMillis = Math.min(...timeouts);\n\n    const updatePoolConnectionSettingsFromProvider = async () => {\n      if (!this.connectionConfigProvider) {\n        return; // static configuration, nothing to update\n      }\n      if (\n        !this.connectionConfigExpirationChecker ||\n        !this.connectionConfigExpirationChecker()\n      ) {\n        return; // not expired, reuse existing connection\n      }\n      const providerResult = await this.connectionConfigProvider();\n      if (providerResult.expirationChecker) {\n        this.connectionConfigExpirationChecker =\n          providerResult.expirationChecker;\n        delete providerResult.expirationChecker; // MySQL2 driver warns on receiving extra properties\n      } else {\n        this.connectionConfigExpirationChecker = null;\n      }\n      this.connectionSettings = providerResult;\n    };\n\n    return Object.assign(poolConfig, {\n      create: async () => {\n        await updatePoolConnectionSettingsFromProvider();\n        const connection = await this.acquireRawConnection();\n        connection.__knexUid = uniqueId('__knexUid');\n        if (poolConfig.afterCreate) {\n          await promisify(poolConfig.afterCreate)(connection);\n        }\n        return connection;\n      },\n\n      destroy: (connection) => {\n        if (connection !== void 0) {\n          return this.destroyRawConnection(connection);\n        }\n      },\n\n      validate: (connection) => {\n        if (connection.__knex__disposed) {\n          this.logger.warn(`Connection Error: ${connection.__knex__disposed}`);\n          return false;\n        }\n\n        return this.validateConnection(connection);\n      },\n    });\n  }\n\n  initializePool(config = this.config) {\n    if (this.pool) {\n      this.logger.warn('The pool has already been initialized');\n      return;\n    }\n\n    const tarnPoolConfig = {\n      ...this.getPoolSettings(config.pool),\n    };\n    // afterCreate is an internal knex param, tarn.js does not support it\n    if (tarnPoolConfig.afterCreate) {\n      delete tarnPoolConfig.afterCreate;\n    }\n\n    this.pool = new Pool(tarnPoolConfig);\n  }\n\n  validateConnection(connection) {\n    return true;\n  }\n\n  // Acquire a connection from the pool.\n  async acquireConnection() {\n    if (!this.pool) {\n      throw new Error('Unable to acquire a connection');\n    }\n    try {\n      const connection = await this.pool.acquire().promise;\n      debug('acquired connection from pool: %s', connection.__knexUid);\n      if (connection.config) {\n        if (connection.config.password) {\n          setHiddenProperty(connection.config);\n        }\n        if (\n          connection.config.authentication &&\n          connection.config.authentication.options &&\n          connection.config.authentication.options.password\n        ) {\n          setHiddenProperty(connection.config.authentication.options);\n        }\n      }\n      return connection;\n    } catch (error) {\n      let convertedError = error;\n      if (error instanceof TimeoutError) {\n        convertedError = new KnexTimeoutError(\n          'Knex: Timeout acquiring a connection. The pool is probably full. ' +\n            'Are you missing a .transacting(trx) call?'\n        );\n      }\n      throw convertedError;\n    }\n  }\n\n  // Releases a connection back to the connection pool,\n  // returning a promise resolved when the connection is released.\n  releaseConnection(connection) {\n    debug('releasing connection to pool: %s', connection.__knexUid);\n    const didRelease = this.pool.release(connection);\n\n    if (!didRelease) {\n      debug('pool refused connection: %s', connection.__knexUid);\n    }\n\n    return Promise.resolve();\n  }\n\n  // Destroy the current connection pool for the client.\n  async destroy(callback) {\n    try {\n      if (this.pool && this.pool.destroy) {\n        await this.pool.destroy();\n      }\n      this.pool = undefined;\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    } catch (err) {\n      if (typeof callback === 'function') {\n        return callback(err);\n      }\n      throw err;\n    }\n  }\n\n  // Return the database being used by this client.\n  database() {\n    return this.connectionSettings.database;\n  }\n\n  toString() {\n    return '[object KnexClient]';\n  }\n\n  assertCanCancelQuery() {\n    if (!this.canCancelQuery) {\n      throw new Error('Query cancelling not supported for this dialect');\n    }\n  }\n\n  cancelQuery() {\n    throw new Error('Query cancelling not supported for this dialect');\n  }\n\n  // Formatter part\n\n  alias(first, second) {\n    return first + ' as ' + second;\n  }\n\n  // Checks whether a value is a function... if it is, we compile it\n  // otherwise we check whether it's a raw\n  parameter(value, builder, bindingsHolder) {\n    if (typeof value === 'function') {\n      return outputQuery(\n        compileCallback(value, undefined, this, bindingsHolder),\n        true,\n        builder,\n        this\n      );\n    }\n    return unwrapRaw(value, true, builder, this, bindingsHolder) || '?';\n  }\n\n  // Turns a list of values into a list of ?'s, joining them with commas unless\n  // a \"joining\" value is specified (e.g. ' and ')\n  parameterize(values, notSetValue, builder, bindingsHolder) {\n    if (typeof values === 'function')\n      return this.parameter(values, builder, bindingsHolder);\n    values = Array.isArray(values) ? values : [values];\n    let str = '',\n      i = -1;\n    while (++i < values.length) {\n      if (i > 0) str += ', ';\n      let value = values[i];\n      // json columns can have object in values.\n      if (isPlainObject(value)) {\n        value = JSON.stringify(value);\n      }\n      str += this.parameter(\n        value === undefined ? notSetValue : value,\n        builder,\n        bindingsHolder\n      );\n    }\n    return str;\n  }\n\n  // Formats `values` into a parenthesized list of parameters for a `VALUES`\n  // clause.\n  //\n  // [1, 2]                  -> '(?, ?)'\n  // [[1, 2], [3, 4]]        -> '((?, ?), (?, ?))'\n  // knex('table')           -> '(select * from \"table\")'\n  // knex.raw('select ?', 1) -> '(select ?)'\n  //\n  values(values, builder, bindingsHolder) {\n    if (Array.isArray(values)) {\n      if (Array.isArray(values[0])) {\n        return `(${values\n          .map(\n            (value) =>\n              `(${this.parameterize(\n                value,\n                undefined,\n                builder,\n                bindingsHolder\n              )})`\n          )\n          .join(', ')})`;\n      }\n      return `(${this.parameterize(\n        values,\n        undefined,\n        builder,\n        bindingsHolder\n      )})`;\n    }\n\n    if (values && values.isRawInstance) {\n      return `(${this.parameter(values, builder, bindingsHolder)})`;\n    }\n\n    return this.parameter(values, builder, bindingsHolder);\n  }\n\n  processPassedConnection(connection) {\n    // Default implementation is noop\n  }\n\n  toPathForJson(jsonPath) {\n    // By default, we want a json path, so if this function is not overriden,\n    // we return the path.\n    return jsonPath;\n  }\n}\n\nObject.assign(Client.prototype, {\n  _escapeBinding: makeEscape({\n    escapeString(str) {\n      return `'${str.replace(/'/g, \"''\")}'`;\n    },\n  }),\n\n  canCancelQuery: false,\n});\n\nmodule.exports = Client;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}