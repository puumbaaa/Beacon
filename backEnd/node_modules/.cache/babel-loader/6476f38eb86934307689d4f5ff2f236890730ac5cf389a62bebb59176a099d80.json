{"ast":null,"code":"function ensureConnectionCallback(runner) {\n  runner.client.emit('start', runner.builder);\n  runner.builder.emit('start', runner.builder);\n  const sql = runner.builder.toSQL();\n  if (runner.builder._debug) {\n    runner.client.logger.debug(sql);\n  }\n  if (Array.isArray(sql)) {\n    return runner.queryArray(sql);\n  }\n  return runner.query(sql);\n}\nfunction ensureConnectionStreamCallback(runner, params) {\n  try {\n    const sql = runner.builder.toSQL();\n    if (Array.isArray(sql) && params.hasHandler) {\n      throw new Error('The stream may only be used with a single query statement.');\n    }\n    return runner.client.stream(runner.connection, sql, params.stream, params.options);\n  } catch (e) {\n    params.stream.emit('error', e);\n    throw e;\n  }\n}\nmodule.exports = {\n  ensureConnectionCallback,\n  ensureConnectionStreamCallback\n};","map":{"version":3,"names":["ensureConnectionCallback","runner","client","emit","builder","sql","toSQL","_debug","logger","debug","Array","isArray","queryArray","query","ensureConnectionStreamCallback","params","hasHandler","Error","stream","connection","options","e","module","exports"],"sources":["C:/Users/momo1/Documents/@DevPerso/Beacon/node_modules/knex/lib/execution/internal/ensure-connection-callback.js"],"sourcesContent":["function ensureConnectionCallback(runner) {\n  runner.client.emit('start', runner.builder);\n  runner.builder.emit('start', runner.builder);\n  const sql = runner.builder.toSQL();\n\n  if (runner.builder._debug) {\n    runner.client.logger.debug(sql);\n  }\n\n  if (Array.isArray(sql)) {\n    return runner.queryArray(sql);\n  }\n  return runner.query(sql);\n}\n\nfunction ensureConnectionStreamCallback(runner, params) {\n  try {\n    const sql = runner.builder.toSQL();\n\n    if (Array.isArray(sql) && params.hasHandler) {\n      throw new Error(\n        'The stream may only be used with a single query statement.'\n      );\n    }\n\n    return runner.client.stream(\n      runner.connection,\n      sql,\n      params.stream,\n      params.options\n    );\n  } catch (e) {\n    params.stream.emit('error', e);\n    throw e;\n  }\n}\n\nmodule.exports = {\n  ensureConnectionCallback,\n  ensureConnectionStreamCallback,\n};\n"],"mappings":"AAAA,SAASA,wBAAwBA,CAACC,MAAM,EAAE;EACxCA,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC,OAAO,EAAEF,MAAM,CAACG,OAAO,CAAC;EAC3CH,MAAM,CAACG,OAAO,CAACD,IAAI,CAAC,OAAO,EAAEF,MAAM,CAACG,OAAO,CAAC;EAC5C,MAAMC,GAAG,GAAGJ,MAAM,CAACG,OAAO,CAACE,KAAK,CAAC,CAAC;EAElC,IAAIL,MAAM,CAACG,OAAO,CAACG,MAAM,EAAE;IACzBN,MAAM,CAACC,MAAM,CAACM,MAAM,CAACC,KAAK,CAACJ,GAAG,CAAC;EACjC;EAEA,IAAIK,KAAK,CAACC,OAAO,CAACN,GAAG,CAAC,EAAE;IACtB,OAAOJ,MAAM,CAACW,UAAU,CAACP,GAAG,CAAC;EAC/B;EACA,OAAOJ,MAAM,CAACY,KAAK,CAACR,GAAG,CAAC;AAC1B;AAEA,SAASS,8BAA8BA,CAACb,MAAM,EAAEc,MAAM,EAAE;EACtD,IAAI;IACF,MAAMV,GAAG,GAAGJ,MAAM,CAACG,OAAO,CAACE,KAAK,CAAC,CAAC;IAElC,IAAII,KAAK,CAACC,OAAO,CAACN,GAAG,CAAC,IAAIU,MAAM,CAACC,UAAU,EAAE;MAC3C,MAAM,IAAIC,KAAK,CACb,4DACF,CAAC;IACH;IAEA,OAAOhB,MAAM,CAACC,MAAM,CAACgB,MAAM,CACzBjB,MAAM,CAACkB,UAAU,EACjBd,GAAG,EACHU,MAAM,CAACG,MAAM,EACbH,MAAM,CAACK,OACT,CAAC;EACH,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVN,MAAM,CAACG,MAAM,CAACf,IAAI,CAAC,OAAO,EAAEkB,CAAC,CAAC;IAC9B,MAAMA,CAAC;EACT;AACF;AAEAC,MAAM,CAACC,OAAO,GAAG;EACfvB,wBAAwB;EACxBc;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}