{"ast":null,"code":"// Raw\n// -------\nconst {\n  EventEmitter\n} = require('events');\nconst debug = require('debug');\nconst assign = require('lodash/assign');\nconst isPlainObject = require('lodash/isPlainObject');\nconst reduce = require('lodash/reduce');\nconst {\n  replaceRawArrBindings,\n  replaceKeyBindings\n} = require('./formatter/rawFormatter');\nconst helpers = require('./util/helpers');\nconst saveAsyncStack = require('./util/save-async-stack');\nconst {\n  nanoid\n} = require('./util/nanoid');\nconst {\n  isNumber,\n  isObject\n} = require('./util/is');\nconst {\n  augmentWithBuilderInterface\n} = require('./builder-interface-augmenter');\nconst debugBindings = debug('knex:bindings');\nclass Raw extends EventEmitter {\n  constructor(client) {\n    super();\n    this.client = client;\n    this.sql = '';\n    this.bindings = [];\n\n    // Todo: Deprecate\n    this._wrappedBefore = undefined;\n    this._wrappedAfter = undefined;\n    if (client && client.config) {\n      this._debug = client.config.debug;\n      saveAsyncStack(this, 4);\n    }\n  }\n  set(sql, bindings) {\n    this.sql = sql;\n    this.bindings = isObject(bindings) && !bindings.toSQL || bindings === undefined ? bindings : [bindings];\n    return this;\n  }\n  timeout(ms, {\n    cancel\n  } = {}) {\n    if (isNumber(ms) && ms > 0) {\n      this._timeout = ms;\n      if (cancel) {\n        this.client.assertCanCancelQuery();\n        this._cancelOnTimeout = true;\n      }\n    }\n    return this;\n  }\n\n  // Wraps the current sql with `before` and `after`.\n  wrap(before, after) {\n    this._wrappedBefore = before;\n    this._wrappedAfter = after;\n    return this;\n  }\n\n  // Calls `toString` on the Knex object.\n  toString() {\n    return this.toQuery();\n  }\n\n  // Returns the raw sql for the query.\n  toSQL(method, tz) {\n    let obj;\n    if (Array.isArray(this.bindings)) {\n      obj = replaceRawArrBindings(this, this.client);\n    } else if (this.bindings && isPlainObject(this.bindings)) {\n      obj = replaceKeyBindings(this, this.client);\n    } else {\n      obj = {\n        method: 'raw',\n        sql: this.sql,\n        bindings: this.bindings === undefined ? [] : [this.bindings]\n      };\n    }\n    if (this._wrappedBefore) {\n      obj.sql = this._wrappedBefore + obj.sql;\n    }\n    if (this._wrappedAfter) {\n      obj.sql = obj.sql + this._wrappedAfter;\n    }\n    obj.options = reduce(this._options, assign, {});\n    if (this._timeout) {\n      obj.timeout = this._timeout;\n      if (this._cancelOnTimeout) {\n        obj.cancelOnTimeout = this._cancelOnTimeout;\n      }\n    }\n    obj.bindings = obj.bindings || [];\n    if (helpers.containsUndefined(obj.bindings)) {\n      const undefinedBindingIndices = helpers.getUndefinedIndices(this.bindings);\n      debugBindings(obj.bindings);\n      throw new Error(`Undefined binding(s) detected for keys [${undefinedBindingIndices}] when compiling RAW query: ${obj.sql}`);\n    }\n    obj.__knexQueryUid = nanoid();\n    Object.defineProperties(obj, {\n      toNative: {\n        value: () => ({\n          sql: this.client.positionBindings(obj.sql),\n          bindings: this.client.prepBindings(obj.bindings)\n        }),\n        enumerable: false\n      }\n    });\n    return obj;\n  }\n}\n\n// Workaround to avoid circular dependency between wrappingFormatter.unwrapRaw and rawFormatter\nRaw.prototype.isRawInstance = true;\n\n// Allow the `Raw` object to be utilized with full access to the relevant\n// promise API.\naugmentWithBuilderInterface(Raw);\nhelpers.addQueryContext(Raw);\nmodule.exports = Raw;","map":{"version":3,"names":["EventEmitter","require","debug","assign","isPlainObject","reduce","replaceRawArrBindings","replaceKeyBindings","helpers","saveAsyncStack","nanoid","isNumber","isObject","augmentWithBuilderInterface","debugBindings","Raw","constructor","client","sql","bindings","_wrappedBefore","undefined","_wrappedAfter","config","_debug","set","toSQL","timeout","ms","cancel","_timeout","assertCanCancelQuery","_cancelOnTimeout","wrap","before","after","toString","toQuery","method","tz","obj","Array","isArray","options","_options","cancelOnTimeout","containsUndefined","undefinedBindingIndices","getUndefinedIndices","Error","__knexQueryUid","Object","defineProperties","toNative","value","positionBindings","prepBindings","enumerable","prototype","isRawInstance","addQueryContext","module","exports"],"sources":["C:/Users/momo1/Documents/@DevPerso/Beacon/node_modules/knex/lib/raw.js"],"sourcesContent":["// Raw\n// -------\nconst { EventEmitter } = require('events');\nconst debug = require('debug');\nconst assign = require('lodash/assign');\nconst isPlainObject = require('lodash/isPlainObject');\nconst reduce = require('lodash/reduce');\n\nconst {\n  replaceRawArrBindings,\n  replaceKeyBindings,\n} = require('./formatter/rawFormatter');\nconst helpers = require('./util/helpers');\nconst saveAsyncStack = require('./util/save-async-stack');\nconst { nanoid } = require('./util/nanoid');\nconst { isNumber, isObject } = require('./util/is');\nconst {\n  augmentWithBuilderInterface,\n} = require('./builder-interface-augmenter');\n\nconst debugBindings = debug('knex:bindings');\n\nclass Raw extends EventEmitter {\n  constructor(client) {\n    super();\n\n    this.client = client;\n\n    this.sql = '';\n    this.bindings = [];\n\n    // Todo: Deprecate\n    this._wrappedBefore = undefined;\n    this._wrappedAfter = undefined;\n    if (client && client.config) {\n      this._debug = client.config.debug;\n      saveAsyncStack(this, 4);\n    }\n  }\n  set(sql, bindings) {\n    this.sql = sql;\n    this.bindings =\n      (isObject(bindings) && !bindings.toSQL) || bindings === undefined\n        ? bindings\n        : [bindings];\n\n    return this;\n  }\n\n  timeout(ms, { cancel } = {}) {\n    if (isNumber(ms) && ms > 0) {\n      this._timeout = ms;\n      if (cancel) {\n        this.client.assertCanCancelQuery();\n        this._cancelOnTimeout = true;\n      }\n    }\n    return this;\n  }\n\n  // Wraps the current sql with `before` and `after`.\n  wrap(before, after) {\n    this._wrappedBefore = before;\n    this._wrappedAfter = after;\n    return this;\n  }\n\n  // Calls `toString` on the Knex object.\n  toString() {\n    return this.toQuery();\n  }\n\n  // Returns the raw sql for the query.\n  toSQL(method, tz) {\n    let obj;\n    if (Array.isArray(this.bindings)) {\n      obj = replaceRawArrBindings(this, this.client);\n    } else if (this.bindings && isPlainObject(this.bindings)) {\n      obj = replaceKeyBindings(this, this.client);\n    } else {\n      obj = {\n        method: 'raw',\n        sql: this.sql,\n        bindings: this.bindings === undefined ? [] : [this.bindings],\n      };\n    }\n\n    if (this._wrappedBefore) {\n      obj.sql = this._wrappedBefore + obj.sql;\n    }\n    if (this._wrappedAfter) {\n      obj.sql = obj.sql + this._wrappedAfter;\n    }\n\n    obj.options = reduce(this._options, assign, {});\n\n    if (this._timeout) {\n      obj.timeout = this._timeout;\n      if (this._cancelOnTimeout) {\n        obj.cancelOnTimeout = this._cancelOnTimeout;\n      }\n    }\n\n    obj.bindings = obj.bindings || [];\n    if (helpers.containsUndefined(obj.bindings)) {\n      const undefinedBindingIndices = helpers.getUndefinedIndices(\n        this.bindings\n      );\n      debugBindings(obj.bindings);\n      throw new Error(\n        `Undefined binding(s) detected for keys [${undefinedBindingIndices}] when compiling RAW query: ${obj.sql}`\n      );\n    }\n\n    obj.__knexQueryUid = nanoid();\n\n    Object.defineProperties(obj, {\n      toNative: {\n        value: () => ({\n          sql: this.client.positionBindings(obj.sql),\n          bindings: this.client.prepBindings(obj.bindings),\n        }),\n        enumerable: false,\n      },\n    });\n\n    return obj;\n  }\n}\n\n// Workaround to avoid circular dependency between wrappingFormatter.unwrapRaw and rawFormatter\nRaw.prototype.isRawInstance = true;\n\n// Allow the `Raw` object to be utilized with full access to the relevant\n// promise API.\naugmentWithBuilderInterface(Raw);\nhelpers.addQueryContext(Raw);\n\nmodule.exports = Raw;\n"],"mappings":"AAAA;AACA;AACA,MAAM;EAAEA;AAAa,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC1C,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAME,MAAM,GAAGF,OAAO,CAAC,eAAe,CAAC;AACvC,MAAMG,aAAa,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AACrD,MAAMI,MAAM,GAAGJ,OAAO,CAAC,eAAe,CAAC;AAEvC,MAAM;EACJK,qBAAqB;EACrBC;AACF,CAAC,GAAGN,OAAO,CAAC,0BAA0B,CAAC;AACvC,MAAMO,OAAO,GAAGP,OAAO,CAAC,gBAAgB,CAAC;AACzC,MAAMQ,cAAc,GAAGR,OAAO,CAAC,yBAAyB,CAAC;AACzD,MAAM;EAAES;AAAO,CAAC,GAAGT,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAM;EAAEU,QAAQ;EAAEC;AAAS,CAAC,GAAGX,OAAO,CAAC,WAAW,CAAC;AACnD,MAAM;EACJY;AACF,CAAC,GAAGZ,OAAO,CAAC,+BAA+B,CAAC;AAE5C,MAAMa,aAAa,GAAGZ,KAAK,CAAC,eAAe,CAAC;AAE5C,MAAMa,GAAG,SAASf,YAAY,CAAC;EAC7BgB,WAAWA,CAACC,MAAM,EAAE;IAClB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACA,MAAM,GAAGA,MAAM;IAEpB,IAAI,CAACC,GAAG,GAAG,EAAE;IACb,IAAI,CAACC,QAAQ,GAAG,EAAE;;IAElB;IACA,IAAI,CAACC,cAAc,GAAGC,SAAS;IAC/B,IAAI,CAACC,aAAa,GAAGD,SAAS;IAC9B,IAAIJ,MAAM,IAAIA,MAAM,CAACM,MAAM,EAAE;MAC3B,IAAI,CAACC,MAAM,GAAGP,MAAM,CAACM,MAAM,CAACrB,KAAK;MACjCO,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC;IACzB;EACF;EACAgB,GAAGA,CAACP,GAAG,EAAEC,QAAQ,EAAE;IACjB,IAAI,CAACD,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,QAAQ,GACVP,QAAQ,CAACO,QAAQ,CAAC,IAAI,CAACA,QAAQ,CAACO,KAAK,IAAKP,QAAQ,KAAKE,SAAS,GAC7DF,QAAQ,GACR,CAACA,QAAQ,CAAC;IAEhB,OAAO,IAAI;EACb;EAEAQ,OAAOA,CAACC,EAAE,EAAE;IAAEC;EAAO,CAAC,GAAG,CAAC,CAAC,EAAE;IAC3B,IAAIlB,QAAQ,CAACiB,EAAE,CAAC,IAAIA,EAAE,GAAG,CAAC,EAAE;MAC1B,IAAI,CAACE,QAAQ,GAAGF,EAAE;MAClB,IAAIC,MAAM,EAAE;QACV,IAAI,CAACZ,MAAM,CAACc,oBAAoB,CAAC,CAAC;QAClC,IAAI,CAACC,gBAAgB,GAAG,IAAI;MAC9B;IACF;IACA,OAAO,IAAI;EACb;;EAEA;EACAC,IAAIA,CAACC,MAAM,EAAEC,KAAK,EAAE;IAClB,IAAI,CAACf,cAAc,GAAGc,MAAM;IAC5B,IAAI,CAACZ,aAAa,GAAGa,KAAK;IAC1B,OAAO,IAAI;EACb;;EAEA;EACAC,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACC,OAAO,CAAC,CAAC;EACvB;;EAEA;EACAX,KAAKA,CAACY,MAAM,EAAEC,EAAE,EAAE;IAChB,IAAIC,GAAG;IACP,IAAIC,KAAK,CAACC,OAAO,CAAC,IAAI,CAACvB,QAAQ,CAAC,EAAE;MAChCqB,GAAG,GAAGlC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAACW,MAAM,CAAC;IAChD,CAAC,MAAM,IAAI,IAAI,CAACE,QAAQ,IAAIf,aAAa,CAAC,IAAI,CAACe,QAAQ,CAAC,EAAE;MACxDqB,GAAG,GAAGjC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAACU,MAAM,CAAC;IAC7C,CAAC,MAAM;MACLuB,GAAG,GAAG;QACJF,MAAM,EAAE,KAAK;QACbpB,GAAG,EAAE,IAAI,CAACA,GAAG;QACbC,QAAQ,EAAE,IAAI,CAACA,QAAQ,KAAKE,SAAS,GAAG,EAAE,GAAG,CAAC,IAAI,CAACF,QAAQ;MAC7D,CAAC;IACH;IAEA,IAAI,IAAI,CAACC,cAAc,EAAE;MACvBoB,GAAG,CAACtB,GAAG,GAAG,IAAI,CAACE,cAAc,GAAGoB,GAAG,CAACtB,GAAG;IACzC;IACA,IAAI,IAAI,CAACI,aAAa,EAAE;MACtBkB,GAAG,CAACtB,GAAG,GAAGsB,GAAG,CAACtB,GAAG,GAAG,IAAI,CAACI,aAAa;IACxC;IAEAkB,GAAG,CAACG,OAAO,GAAGtC,MAAM,CAAC,IAAI,CAACuC,QAAQ,EAAEzC,MAAM,EAAE,CAAC,CAAC,CAAC;IAE/C,IAAI,IAAI,CAAC2B,QAAQ,EAAE;MACjBU,GAAG,CAACb,OAAO,GAAG,IAAI,CAACG,QAAQ;MAC3B,IAAI,IAAI,CAACE,gBAAgB,EAAE;QACzBQ,GAAG,CAACK,eAAe,GAAG,IAAI,CAACb,gBAAgB;MAC7C;IACF;IAEAQ,GAAG,CAACrB,QAAQ,GAAGqB,GAAG,CAACrB,QAAQ,IAAI,EAAE;IACjC,IAAIX,OAAO,CAACsC,iBAAiB,CAACN,GAAG,CAACrB,QAAQ,CAAC,EAAE;MAC3C,MAAM4B,uBAAuB,GAAGvC,OAAO,CAACwC,mBAAmB,CACzD,IAAI,CAAC7B,QACP,CAAC;MACDL,aAAa,CAAC0B,GAAG,CAACrB,QAAQ,CAAC;MAC3B,MAAM,IAAI8B,KAAK,CACb,2CAA2CF,uBAAuB,+BAA+BP,GAAG,CAACtB,GAAG,EAC1G,CAAC;IACH;IAEAsB,GAAG,CAACU,cAAc,GAAGxC,MAAM,CAAC,CAAC;IAE7ByC,MAAM,CAACC,gBAAgB,CAACZ,GAAG,EAAE;MAC3Ba,QAAQ,EAAE;QACRC,KAAK,EAAEA,CAAA,MAAO;UACZpC,GAAG,EAAE,IAAI,CAACD,MAAM,CAACsC,gBAAgB,CAACf,GAAG,CAACtB,GAAG,CAAC;UAC1CC,QAAQ,EAAE,IAAI,CAACF,MAAM,CAACuC,YAAY,CAAChB,GAAG,CAACrB,QAAQ;QACjD,CAAC,CAAC;QACFsC,UAAU,EAAE;MACd;IACF,CAAC,CAAC;IAEF,OAAOjB,GAAG;EACZ;AACF;;AAEA;AACAzB,GAAG,CAAC2C,SAAS,CAACC,aAAa,GAAG,IAAI;;AAElC;AACA;AACA9C,2BAA2B,CAACE,GAAG,CAAC;AAChCP,OAAO,CAACoD,eAAe,CAAC7C,GAAG,CAAC;AAE5B8C,MAAM,CAACC,OAAO,GAAG/C,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}