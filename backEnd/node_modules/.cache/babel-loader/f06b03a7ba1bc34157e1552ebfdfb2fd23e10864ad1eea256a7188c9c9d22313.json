{"ast":null,"code":"const chunk = require('lodash/chunk');\nconst flatten = require('lodash/flatten');\nconst delay = require('./internal/delay');\nconst {\n  isNumber\n} = require('../util/is');\nfunction batchInsert(client, tableName, batch, chunkSize = 1000) {\n  let returning = undefined;\n  let transaction = null;\n  if (!isNumber(chunkSize) || chunkSize < 1) {\n    throw new TypeError(`Invalid chunkSize: ${chunkSize}`);\n  }\n  if (!Array.isArray(batch)) {\n    throw new TypeError(`Invalid batch: Expected array, got ${typeof batch}`);\n  }\n  const chunks = chunk(batch, chunkSize);\n  const runInTransaction = cb => {\n    if (transaction) {\n      return cb(transaction);\n    }\n    return client.transaction(cb);\n  };\n  return Object.assign(Promise.resolve().then(async () => {\n    //Next tick to ensure wrapper functions are called if needed\n    await delay(1);\n    return runInTransaction(async tr => {\n      const chunksResults = [];\n      for (const items of chunks) {\n        chunksResults.push(await tr(tableName).insert(items, returning));\n      }\n      return flatten(chunksResults);\n    });\n  }), {\n    returning(columns) {\n      returning = columns;\n      return this;\n    },\n    transacting(tr) {\n      transaction = tr;\n      return this;\n    }\n  });\n}\nmodule.exports = batchInsert;","map":{"version":3,"names":["chunk","require","flatten","delay","isNumber","batchInsert","client","tableName","batch","chunkSize","returning","undefined","transaction","TypeError","Array","isArray","chunks","runInTransaction","cb","Object","assign","Promise","resolve","then","tr","chunksResults","items","push","insert","columns","transacting","module","exports"],"sources":["C:/Users/momo1/Documents/@DevPerso/Beacon/node_modules/knex/lib/execution/batch-insert.js"],"sourcesContent":["const chunk = require('lodash/chunk');\nconst flatten = require('lodash/flatten');\nconst delay = require('./internal/delay');\nconst { isNumber } = require('../util/is');\n\nfunction batchInsert(client, tableName, batch, chunkSize = 1000) {\n  let returning = undefined;\n  let transaction = null;\n  if (!isNumber(chunkSize) || chunkSize < 1) {\n    throw new TypeError(`Invalid chunkSize: ${chunkSize}`);\n  }\n  if (!Array.isArray(batch)) {\n    throw new TypeError(`Invalid batch: Expected array, got ${typeof batch}`);\n  }\n  const chunks = chunk(batch, chunkSize);\n\n  const runInTransaction = (cb) => {\n    if (transaction) {\n      return cb(transaction);\n    }\n    return client.transaction(cb);\n  };\n\n  return Object.assign(\n    Promise.resolve().then(async () => {\n      //Next tick to ensure wrapper functions are called if needed\n      await delay(1);\n      return runInTransaction(async (tr) => {\n        const chunksResults = [];\n        for (const items of chunks) {\n          chunksResults.push(await tr(tableName).insert(items, returning));\n        }\n        return flatten(chunksResults);\n      });\n    }),\n    {\n      returning(columns) {\n        returning = columns;\n\n        return this;\n      },\n      transacting(tr) {\n        transaction = tr;\n\n        return this;\n      },\n    }\n  );\n}\n\nmodule.exports = batchInsert;\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,cAAc,CAAC;AACrC,MAAMC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACzC,MAAME,KAAK,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AACzC,MAAM;EAAEG;AAAS,CAAC,GAAGH,OAAO,CAAC,YAAY,CAAC;AAE1C,SAASI,WAAWA,CAACC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,SAAS,GAAG,IAAI,EAAE;EAC/D,IAAIC,SAAS,GAAGC,SAAS;EACzB,IAAIC,WAAW,GAAG,IAAI;EACtB,IAAI,CAACR,QAAQ,CAACK,SAAS,CAAC,IAAIA,SAAS,GAAG,CAAC,EAAE;IACzC,MAAM,IAAII,SAAS,CAAC,sBAAsBJ,SAAS,EAAE,CAAC;EACxD;EACA,IAAI,CAACK,KAAK,CAACC,OAAO,CAACP,KAAK,CAAC,EAAE;IACzB,MAAM,IAAIK,SAAS,CAAC,sCAAsC,OAAOL,KAAK,EAAE,CAAC;EAC3E;EACA,MAAMQ,MAAM,GAAGhB,KAAK,CAACQ,KAAK,EAAEC,SAAS,CAAC;EAEtC,MAAMQ,gBAAgB,GAAIC,EAAE,IAAK;IAC/B,IAAIN,WAAW,EAAE;MACf,OAAOM,EAAE,CAACN,WAAW,CAAC;IACxB;IACA,OAAON,MAAM,CAACM,WAAW,CAACM,EAAE,CAAC;EAC/B,CAAC;EAED,OAAOC,MAAM,CAACC,MAAM,CAClBC,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,YAAY;IACjC;IACA,MAAMpB,KAAK,CAAC,CAAC,CAAC;IACd,OAAOc,gBAAgB,CAAC,MAAOO,EAAE,IAAK;MACpC,MAAMC,aAAa,GAAG,EAAE;MACxB,KAAK,MAAMC,KAAK,IAAIV,MAAM,EAAE;QAC1BS,aAAa,CAACE,IAAI,CAAC,MAAMH,EAAE,CAACjB,SAAS,CAAC,CAACqB,MAAM,CAACF,KAAK,EAAEhB,SAAS,CAAC,CAAC;MAClE;MACA,OAAOR,OAAO,CAACuB,aAAa,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,CAAC,EACF;IACEf,SAASA,CAACmB,OAAO,EAAE;MACjBnB,SAAS,GAAGmB,OAAO;MAEnB,OAAO,IAAI;IACb,CAAC;IACDC,WAAWA,CAACN,EAAE,EAAE;MACdZ,WAAW,GAAGY,EAAE;MAEhB,OAAO,IAAI;IACb;EACF,CACF,CAAC;AACH;AAEAO,MAAM,CAACC,OAAO,GAAG3B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}