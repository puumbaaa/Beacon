{"ast":null,"code":"// MySQL Schema Compiler\n// -------\nconst SchemaCompiler = require('../../../schema/compiler');\nclass SchemaCompiler_MySQL extends SchemaCompiler {\n  constructor(client, builder) {\n    super(client, builder);\n  }\n\n  // Rename a table on the schema.\n  renameTable(tableName, to) {\n    this.pushQuery(`rename table ${this.formatter.wrap(tableName)} to ${this.formatter.wrap(to)}`);\n  }\n  renameView(from, to) {\n    this.renameTable(from, to);\n  }\n\n  // Check whether a table exists on the query.\n  hasTable(tableName) {\n    let sql = 'select * from information_schema.tables where table_name = ?';\n    const bindings = [tableName];\n    if (this.schema) {\n      sql += ' and table_schema = ?';\n      bindings.push(this.schema);\n    } else {\n      sql += ' and table_schema = database()';\n    }\n    this.pushQuery({\n      sql,\n      bindings,\n      output: function output(resp) {\n        return resp.length > 0;\n      }\n    });\n  }\n\n  // Check whether a column exists on the schema.\n  hasColumn(tableName, column) {\n    this.pushQuery({\n      sql: `show columns from ${this.formatter.wrap(tableName)}`,\n      output(resp) {\n        return resp.some(row => {\n          return this.client.wrapIdentifier(row.Field.toLowerCase()) === this.client.wrapIdentifier(column.toLowerCase());\n        });\n      }\n    });\n  }\n}\nmodule.exports = SchemaCompiler_MySQL;","map":{"version":3,"names":["SchemaCompiler","require","SchemaCompiler_MySQL","constructor","client","builder","renameTable","tableName","to","pushQuery","formatter","wrap","renameView","from","hasTable","sql","bindings","schema","push","output","resp","length","hasColumn","column","some","row","wrapIdentifier","Field","toLowerCase","module","exports"],"sources":["C:/Users/momo1/Documents/@DevPerso/Beacon/node_modules/knex/lib/dialects/mysql/schema/mysql-compiler.js"],"sourcesContent":["// MySQL Schema Compiler\n// -------\nconst SchemaCompiler = require('../../../schema/compiler');\n\nclass SchemaCompiler_MySQL extends SchemaCompiler {\n  constructor(client, builder) {\n    super(client, builder);\n  }\n\n  // Rename a table on the schema.\n  renameTable(tableName, to) {\n    this.pushQuery(\n      `rename table ${this.formatter.wrap(tableName)} to ${this.formatter.wrap(\n        to\n      )}`\n    );\n  }\n\n  renameView(from, to) {\n    this.renameTable(from, to);\n  }\n\n  // Check whether a table exists on the query.\n  hasTable(tableName) {\n    let sql = 'select * from information_schema.tables where table_name = ?';\n    const bindings = [tableName];\n\n    if (this.schema) {\n      sql += ' and table_schema = ?';\n      bindings.push(this.schema);\n    } else {\n      sql += ' and table_schema = database()';\n    }\n\n    this.pushQuery({\n      sql,\n      bindings,\n      output: function output(resp) {\n        return resp.length > 0;\n      },\n    });\n  }\n\n  // Check whether a column exists on the schema.\n  hasColumn(tableName, column) {\n    this.pushQuery({\n      sql: `show columns from ${this.formatter.wrap(tableName)}`,\n      output(resp) {\n        return resp.some((row) => {\n          return (\n            this.client.wrapIdentifier(row.Field.toLowerCase()) ===\n            this.client.wrapIdentifier(column.toLowerCase())\n          );\n        });\n      },\n    });\n  }\n}\n\nmodule.exports = SchemaCompiler_MySQL;\n"],"mappings":"AAAA;AACA;AACA,MAAMA,cAAc,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAE1D,MAAMC,oBAAoB,SAASF,cAAc,CAAC;EAChDG,WAAWA,CAACC,MAAM,EAAEC,OAAO,EAAE;IAC3B,KAAK,CAACD,MAAM,EAAEC,OAAO,CAAC;EACxB;;EAEA;EACAC,WAAWA,CAACC,SAAS,EAAEC,EAAE,EAAE;IACzB,IAAI,CAACC,SAAS,CACZ,gBAAgB,IAAI,CAACC,SAAS,CAACC,IAAI,CAACJ,SAAS,CAAC,OAAO,IAAI,CAACG,SAAS,CAACC,IAAI,CACtEH,EACF,CAAC,EACH,CAAC;EACH;EAEAI,UAAUA,CAACC,IAAI,EAAEL,EAAE,EAAE;IACnB,IAAI,CAACF,WAAW,CAACO,IAAI,EAAEL,EAAE,CAAC;EAC5B;;EAEA;EACAM,QAAQA,CAACP,SAAS,EAAE;IAClB,IAAIQ,GAAG,GAAG,8DAA8D;IACxE,MAAMC,QAAQ,GAAG,CAACT,SAAS,CAAC;IAE5B,IAAI,IAAI,CAACU,MAAM,EAAE;MACfF,GAAG,IAAI,uBAAuB;MAC9BC,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACD,MAAM,CAAC;IAC5B,CAAC,MAAM;MACLF,GAAG,IAAI,gCAAgC;IACzC;IAEA,IAAI,CAACN,SAAS,CAAC;MACbM,GAAG;MACHC,QAAQ;MACRG,MAAM,EAAE,SAASA,MAAMA,CAACC,IAAI,EAAE;QAC5B,OAAOA,IAAI,CAACC,MAAM,GAAG,CAAC;MACxB;IACF,CAAC,CAAC;EACJ;;EAEA;EACAC,SAASA,CAACf,SAAS,EAAEgB,MAAM,EAAE;IAC3B,IAAI,CAACd,SAAS,CAAC;MACbM,GAAG,EAAE,qBAAqB,IAAI,CAACL,SAAS,CAACC,IAAI,CAACJ,SAAS,CAAC,EAAE;MAC1DY,MAAMA,CAACC,IAAI,EAAE;QACX,OAAOA,IAAI,CAACI,IAAI,CAAEC,GAAG,IAAK;UACxB,OACE,IAAI,CAACrB,MAAM,CAACsB,cAAc,CAACD,GAAG,CAACE,KAAK,CAACC,WAAW,CAAC,CAAC,CAAC,KACnD,IAAI,CAACxB,MAAM,CAACsB,cAAc,CAACH,MAAM,CAACK,WAAW,CAAC,CAAC,CAAC;QAEpD,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;AACF;AAEAC,MAAM,CAACC,OAAO,GAAG5B,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}