{"ast":null,"code":"const Transaction = require('../../../execution/transaction');\nclass Transaction_Sqlite extends Transaction {\n  begin(conn) {\n    // SQLite doesn't really support isolation levels, it is serializable by\n    // default and so we override it to ignore isolation level.\n    // There is a `PRAGMA read_uncommitted = true;`, but that's probably not\n    // what the user wants\n    if (this.isolationLevel) {\n      this.client.logger.warn('sqlite3 only supports serializable transactions, ignoring the isolation level param');\n    }\n    // SQLite infers read vs write transactions from the statement operation\n    // https://www.sqlite.org/lang_transaction.html#read_transactions_versus_write_transactions\n    if (this.readOnly) {\n      this.client.logger.warn('sqlite3 implicitly handles read vs write transactions');\n    }\n    return this.query(conn, 'BEGIN;');\n  }\n}\nmodule.exports = Transaction_Sqlite;","map":{"version":3,"names":["Transaction","require","Transaction_Sqlite","begin","conn","isolationLevel","client","logger","warn","readOnly","query","module","exports"],"sources":["C:/Users/momo1/Documents/@DevPerso/Beacon/node_modules/knex/lib/dialects/sqlite3/execution/sqlite-transaction.js"],"sourcesContent":["const Transaction = require('../../../execution/transaction');\n\nclass Transaction_Sqlite extends Transaction {\n  begin(conn) {\n    // SQLite doesn't really support isolation levels, it is serializable by\n    // default and so we override it to ignore isolation level.\n    // There is a `PRAGMA read_uncommitted = true;`, but that's probably not\n    // what the user wants\n    if (this.isolationLevel) {\n      this.client.logger.warn(\n        'sqlite3 only supports serializable transactions, ignoring the isolation level param'\n      );\n    }\n    // SQLite infers read vs write transactions from the statement operation\n    // https://www.sqlite.org/lang_transaction.html#read_transactions_versus_write_transactions\n    if (this.readOnly) {\n      this.client.logger.warn(\n        'sqlite3 implicitly handles read vs write transactions'\n      );\n    }\n    return this.query(conn, 'BEGIN;');\n  }\n}\n\nmodule.exports = Transaction_Sqlite;\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,gCAAgC,CAAC;AAE7D,MAAMC,kBAAkB,SAASF,WAAW,CAAC;EAC3CG,KAAKA,CAACC,IAAI,EAAE;IACV;IACA;IACA;IACA;IACA,IAAI,IAAI,CAACC,cAAc,EAAE;MACvB,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,IAAI,CACrB,qFACF,CAAC;IACH;IACA;IACA;IACA,IAAI,IAAI,CAACC,QAAQ,EAAE;MACjB,IAAI,CAACH,MAAM,CAACC,MAAM,CAACC,IAAI,CACrB,uDACF,CAAC;IACH;IACA,OAAO,IAAI,CAACE,KAAK,CAACN,IAAI,EAAE,QAAQ,CAAC;EACnC;AACF;AAEAO,MAAM,CAACC,OAAO,GAAGV,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}