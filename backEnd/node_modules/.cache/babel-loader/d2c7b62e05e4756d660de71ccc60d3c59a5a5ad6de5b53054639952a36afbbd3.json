{"ast":null,"code":"function tokenize(text, tokens) {\n  const compiledRegex = new RegExp(Object.entries(tokens).map(([type, regex]) => `(?<${type}>${regex.source})`).join('|'), 'yi');\n  let index = 0;\n  const ast = [];\n  while (index < text.length) {\n    compiledRegex.lastIndex = index;\n    const result = text.match(compiledRegex);\n    if (result !== null) {\n      const [type, text] = Object.entries(result.groups).find(([name, group]) => group !== undefined);\n      index += text.length;\n      if (!type.startsWith('_')) {\n        ast.push({\n          type,\n          text\n        });\n      }\n    } else {\n      throw new Error(`No matching tokenizer rule found at: [${text.substring(index)}]`);\n    }\n  }\n  return ast;\n}\nmodule.exports = {\n  tokenize\n};","map":{"version":3,"names":["tokenize","text","tokens","compiledRegex","RegExp","Object","entries","map","type","regex","source","join","index","ast","length","lastIndex","result","match","groups","find","name","group","undefined","startsWith","push","Error","substring","module","exports"],"sources":["C:/Users/momo1/Documents/@DevPerso/Beacon/node_modules/knex/lib/dialects/sqlite3/schema/internal/tokenizer.js"],"sourcesContent":["function tokenize(text, tokens) {\n  const compiledRegex = new RegExp(\n    Object.entries(tokens)\n      .map(([type, regex]) => `(?<${type}>${regex.source})`)\n      .join('|'),\n    'yi'\n  );\n\n  let index = 0;\n  const ast = [];\n\n  while (index < text.length) {\n    compiledRegex.lastIndex = index;\n    const result = text.match(compiledRegex);\n\n    if (result !== null) {\n      const [type, text] = Object.entries(result.groups).find(\n        ([name, group]) => group !== undefined\n      );\n\n      index += text.length;\n\n      if (!type.startsWith('_')) {\n        ast.push({ type, text });\n      }\n    } else {\n      throw new Error(\n        `No matching tokenizer rule found at: [${text.substring(index)}]`\n      );\n    }\n  }\n\n  return ast;\n}\n\nmodule.exports = {\n  tokenize,\n};\n"],"mappings":"AAAA,SAASA,QAAQA,CAACC,IAAI,EAAEC,MAAM,EAAE;EAC9B,MAAMC,aAAa,GAAG,IAAIC,MAAM,CAC9BC,MAAM,CAACC,OAAO,CAACJ,MAAM,CAAC,CACnBK,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,KAAK,CAAC,KAAK,MAAMD,IAAI,IAAIC,KAAK,CAACC,MAAM,GAAG,CAAC,CACrDC,IAAI,CAAC,GAAG,CAAC,EACZ,IACF,CAAC;EAED,IAAIC,KAAK,GAAG,CAAC;EACb,MAAMC,GAAG,GAAG,EAAE;EAEd,OAAOD,KAAK,GAAGX,IAAI,CAACa,MAAM,EAAE;IAC1BX,aAAa,CAACY,SAAS,GAAGH,KAAK;IAC/B,MAAMI,MAAM,GAAGf,IAAI,CAACgB,KAAK,CAACd,aAAa,CAAC;IAExC,IAAIa,MAAM,KAAK,IAAI,EAAE;MACnB,MAAM,CAACR,IAAI,EAAEP,IAAI,CAAC,GAAGI,MAAM,CAACC,OAAO,CAACU,MAAM,CAACE,MAAM,CAAC,CAACC,IAAI,CACrD,CAAC,CAACC,IAAI,EAAEC,KAAK,CAAC,KAAKA,KAAK,KAAKC,SAC/B,CAAC;MAEDV,KAAK,IAAIX,IAAI,CAACa,MAAM;MAEpB,IAAI,CAACN,IAAI,CAACe,UAAU,CAAC,GAAG,CAAC,EAAE;QACzBV,GAAG,CAACW,IAAI,CAAC;UAAEhB,IAAI;UAAEP;QAAK,CAAC,CAAC;MAC1B;IACF,CAAC,MAAM;MACL,MAAM,IAAIwB,KAAK,CACb,yCAAyCxB,IAAI,CAACyB,SAAS,CAACd,KAAK,CAAC,GAChE,CAAC;IACH;EACF;EAEA,OAAOC,GAAG;AACZ;AAEAc,MAAM,CAACC,OAAO,GAAG;EACf5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}