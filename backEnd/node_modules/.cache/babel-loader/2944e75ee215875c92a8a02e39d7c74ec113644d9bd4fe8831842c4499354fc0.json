{"ast":null,"code":"class NameHelper {\n  constructor(oracleVersion) {\n    this.oracleVersion = oracleVersion;\n\n    // In oracle versions prior to 12.2, the maximum length for a database\n    // object name was 30 characters. 12.2 extended this to 128.\n    const versionParts = oracleVersion.split('.').map(versionPart => parseInt(versionPart));\n    if (versionParts[0] > 12 || versionParts[0] === 12 && versionParts[1] >= 2) {\n      this.limit = 128;\n    } else {\n      this.limit = 30;\n    }\n  }\n  generateCombinedName(logger, postfix, name, subNames) {\n    const crypto = require('crypto');\n    if (!Array.isArray(subNames)) subNames = subNames ? [subNames] : [];\n    const table = name.replace(/\\.|-/g, '_');\n    const subNamesPart = subNames.join('_');\n    let result = `${table}_${subNamesPart.length ? subNamesPart + '_' : ''}${postfix}`.toLowerCase();\n    if (result.length > this.limit) {\n      logger.warn(`Automatically generated name \"${result}\" exceeds ${this.limit} character ` + `limit for Oracle Database ${this.oracleVersion}. Using base64 encoded sha1 of that name instead.`);\n      // generates the sha1 of the name and encode it with base64\n      result = crypto.createHash('sha1').update(result).digest('base64').replace('=', '');\n    }\n    return result;\n  }\n}\nfunction wrapSqlWithCatch(sql, errorNumberToCatch) {\n  return `begin execute immediate '${sql.replace(/'/g, \"''\")}'; ` + `exception when others then if sqlcode != ${errorNumberToCatch} then raise; ` + `end if; ` + `end;`;\n}\nfunction ReturningHelper(columnName) {\n  this.columnName = columnName;\n}\nReturningHelper.prototype.toString = function () {\n  return `[object ReturningHelper:${this.columnName}]`;\n};\n\n// If the error is any of these, we'll assume we need to\n// mark the connection as failed\nfunction isConnectionError(err) {\n  return ['DPI-1010',\n  // not connected\n  'DPI-1080',\n  // connection was closed by ORA-%d\n  'ORA-03114',\n  // not connected to ORACLE\n  'ORA-03113',\n  // end-of-file on communication channel\n  'ORA-03135',\n  // connection lost contact\n  'ORA-12514',\n  // listener does not currently know of service requested in connect descriptor\n  'ORA-00022',\n  // invalid session ID; access denied\n  'ORA-00028',\n  // your session has been killed\n  'ORA-00031',\n  // your session has been marked for kill\n  'ORA-00045',\n  // your session has been terminated with no replay\n  'ORA-00378',\n  // buffer pools cannot be created as specified\n  'ORA-00602',\n  // internal programming exception\n  'ORA-00603',\n  // ORACLE server session terminated by fatal error\n  'ORA-00609',\n  // could not attach to incoming connection\n  'ORA-01012',\n  // not logged on\n  'ORA-01041',\n  // internal error. hostdef extension doesn't exist\n  'ORA-01043',\n  // user side memory corruption\n  'ORA-01089',\n  // immediate shutdown or close in progress\n  'ORA-01092',\n  // ORACLE instance terminated. Disconnection forced\n  'ORA-02396',\n  // exceeded maximum idle time, please connect again\n  'ORA-03122',\n  // attempt to close ORACLE-side window on user side\n  'ORA-12153',\n  // TNS'not connected\n  'ORA-12537',\n  // TNS'connection closed\n  'ORA-12547',\n  // TNS'lost contact\n  'ORA-12570',\n  // TNS'packet reader failure\n  'ORA-12583',\n  // TNS'no reader\n  'ORA-27146',\n  // post/wait initialization failed\n  'ORA-28511',\n  // lost RPC connection\n  'ORA-56600',\n  // an illegal OCI function call was issued\n  'NJS-024', 'NJS-003'].some(function (prefix) {\n    return err.message.indexOf(prefix) === 0;\n  });\n}\nmodule.exports = {\n  NameHelper,\n  isConnectionError,\n  wrapSqlWithCatch,\n  ReturningHelper\n};","map":{"version":3,"names":["NameHelper","constructor","oracleVersion","versionParts","split","map","versionPart","parseInt","limit","generateCombinedName","logger","postfix","name","subNames","crypto","require","Array","isArray","table","replace","subNamesPart","join","result","length","toLowerCase","warn","createHash","update","digest","wrapSqlWithCatch","sql","errorNumberToCatch","ReturningHelper","columnName","prototype","toString","isConnectionError","err","some","prefix","message","indexOf","module","exports"],"sources":["C:/Users/momo1/Documents/@DevPerso/Beacon/node_modules/knex/lib/dialects/oracle/utils.js"],"sourcesContent":["class NameHelper {\n  constructor(oracleVersion) {\n    this.oracleVersion = oracleVersion;\n\n    // In oracle versions prior to 12.2, the maximum length for a database\n    // object name was 30 characters. 12.2 extended this to 128.\n    const versionParts = oracleVersion\n      .split('.')\n      .map((versionPart) => parseInt(versionPart));\n    if (\n      versionParts[0] > 12 ||\n      (versionParts[0] === 12 && versionParts[1] >= 2)\n    ) {\n      this.limit = 128;\n    } else {\n      this.limit = 30;\n    }\n  }\n\n  generateCombinedName(logger, postfix, name, subNames) {\n    const crypto = require('crypto');\n    if (!Array.isArray(subNames)) subNames = subNames ? [subNames] : [];\n    const table = name.replace(/\\.|-/g, '_');\n    const subNamesPart = subNames.join('_');\n    let result = `${table}_${\n      subNamesPart.length ? subNamesPart + '_' : ''\n    }${postfix}`.toLowerCase();\n    if (result.length > this.limit) {\n      logger.warn(\n        `Automatically generated name \"${result}\" exceeds ${this.limit} character ` +\n          `limit for Oracle Database ${this.oracleVersion}. Using base64 encoded sha1 of that name instead.`\n      );\n      // generates the sha1 of the name and encode it with base64\n      result = crypto\n        .createHash('sha1')\n        .update(result)\n        .digest('base64')\n        .replace('=', '');\n    }\n    return result;\n  }\n}\n\nfunction wrapSqlWithCatch(sql, errorNumberToCatch) {\n  return (\n    `begin execute immediate '${sql.replace(/'/g, \"''\")}'; ` +\n    `exception when others then if sqlcode != ${errorNumberToCatch} then raise; ` +\n    `end if; ` +\n    `end;`\n  );\n}\n\nfunction ReturningHelper(columnName) {\n  this.columnName = columnName;\n}\n\nReturningHelper.prototype.toString = function () {\n  return `[object ReturningHelper:${this.columnName}]`;\n};\n\n// If the error is any of these, we'll assume we need to\n// mark the connection as failed\nfunction isConnectionError(err) {\n  return [\n    'DPI-1010', // not connected\n    'DPI-1080', // connection was closed by ORA-%d\n    'ORA-03114', // not connected to ORACLE\n    'ORA-03113', // end-of-file on communication channel\n    'ORA-03135', // connection lost contact\n    'ORA-12514', // listener does not currently know of service requested in connect descriptor\n    'ORA-00022', // invalid session ID; access denied\n    'ORA-00028', // your session has been killed\n    'ORA-00031', // your session has been marked for kill\n    'ORA-00045', // your session has been terminated with no replay\n    'ORA-00378', // buffer pools cannot be created as specified\n    'ORA-00602', // internal programming exception\n    'ORA-00603', // ORACLE server session terminated by fatal error\n    'ORA-00609', // could not attach to incoming connection\n    'ORA-01012', // not logged on\n    'ORA-01041', // internal error. hostdef extension doesn't exist\n    'ORA-01043', // user side memory corruption\n    'ORA-01089', // immediate shutdown or close in progress\n    'ORA-01092', // ORACLE instance terminated. Disconnection forced\n    'ORA-02396', // exceeded maximum idle time, please connect again\n    'ORA-03122', // attempt to close ORACLE-side window on user side\n    'ORA-12153', // TNS'not connected\n    'ORA-12537', // TNS'connection closed\n    'ORA-12547', // TNS'lost contact\n    'ORA-12570', // TNS'packet reader failure\n    'ORA-12583', // TNS'no reader\n    'ORA-27146', // post/wait initialization failed\n    'ORA-28511', // lost RPC connection\n    'ORA-56600', // an illegal OCI function call was issued\n    'NJS-024',\n    'NJS-003',\n  ].some(function (prefix) {\n    return err.message.indexOf(prefix) === 0;\n  });\n}\n\nmodule.exports = {\n  NameHelper,\n  isConnectionError,\n  wrapSqlWithCatch,\n  ReturningHelper,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}