{"ast":null,"code":"// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nconst urlAlphabet = 'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';\nconst numberAlphabet = '0123456789';\n\n/**\n * Generate URL-friendly unique ID. This method uses the non-secure\n * predictable random generator with bigger collision probability.\n * Based on https://github.com/ai/nanoid\n *\n * ```js\n * model.id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqL\"\n * ```\n *\n * @param size Size of the ID. The default size is 21.\n * @returns A random string.\n */\nfunction nanoid(size = 21) {\n  let id = '';\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size;\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0];\n  }\n  return id;\n}\nfunction nanonum(size = 21) {\n  let id = '';\n  let i = size;\n  while (i--) {\n    id += numberAlphabet[Math.random() * 10 | 0];\n  }\n  return id;\n}\nmodule.exports = {\n  nanoid,\n  nanonum\n};","map":{"version":3,"names":["urlAlphabet","numberAlphabet","nanoid","size","id","i","Math","random","nanonum","module","exports"],"sources":["C:/Users/momo1/Documents/@DevPerso/Beacon/node_modules/knex/lib/util/nanoid.js"],"sourcesContent":["// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nconst urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';\n\nconst numberAlphabet = '0123456789';\n\n/**\n * Generate URL-friendly unique ID. This method uses the non-secure\n * predictable random generator with bigger collision probability.\n * Based on https://github.com/ai/nanoid\n *\n * ```js\n * model.id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqL\"\n * ```\n *\n * @param size Size of the ID. The default size is 21.\n * @returns A random string.\n */\nfunction nanoid(size = 21) {\n  let id = '';\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size;\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[(Math.random() * 64) | 0];\n  }\n  return id;\n}\n\nfunction nanonum(size = 21) {\n  let id = '';\n  let i = size;\n  while (i--) {\n    id += numberAlphabet[(Math.random() * 10) | 0];\n  }\n  return id;\n}\n\nmodule.exports = { nanoid, nanonum };\n"],"mappings":"AAAA;AACA;AACA,MAAMA,WAAW,GACf,kEAAkE;AAEpE,MAAMC,cAAc,GAAG,YAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAMA,CAACC,IAAI,GAAG,EAAE,EAAE;EACzB,IAAIC,EAAE,GAAG,EAAE;EACX;EACA,IAAIC,CAAC,GAAGF,IAAI;EACZ,OAAOE,CAAC,EAAE,EAAE;IACV;IACAD,EAAE,IAAIJ,WAAW,CAAEM,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAC;EAC7C;EACA,OAAOH,EAAE;AACX;AAEA,SAASI,OAAOA,CAACL,IAAI,GAAG,EAAE,EAAE;EAC1B,IAAIC,EAAE,GAAG,EAAE;EACX,IAAIC,CAAC,GAAGF,IAAI;EACZ,OAAOE,CAAC,EAAE,EAAE;IACVD,EAAE,IAAIH,cAAc,CAAEK,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAC;EAChD;EACA,OAAOH,EAAE;AACX;AAEAK,MAAM,CAACC,OAAO,GAAG;EAAER,MAAM;EAAEM;AAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}