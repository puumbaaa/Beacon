{"ast":null,"code":"function copyData(sourceTable, targetTable, columns) {\n  return `INSERT INTO \"${targetTable}\" SELECT ${columns === undefined ? '*' : columns.map(column => `\"${column}\"`).join(', ')} FROM \"${sourceTable}\";`;\n}\nfunction dropOriginal(tableName) {\n  return `DROP TABLE \"${tableName}\"`;\n}\nfunction renameTable(tableName, alteredName) {\n  return `ALTER TABLE \"${tableName}\" RENAME TO \"${alteredName}\"`;\n}\nfunction getTableSql(tableName) {\n  return `SELECT type, sql FROM sqlite_master WHERE (type='table' OR (type='index' AND sql IS NOT NULL)) AND lower(tbl_name)='${tableName.toLowerCase()}'`;\n}\nfunction isForeignCheckEnabled() {\n  return `PRAGMA foreign_keys`;\n}\nfunction setForeignCheck(enable) {\n  return `PRAGMA foreign_keys = ${enable ? 'ON' : 'OFF'}`;\n}\nfunction executeForeignCheck() {\n  return `PRAGMA foreign_key_check`;\n}\nmodule.exports = {\n  copyData,\n  dropOriginal,\n  renameTable,\n  getTableSql,\n  isForeignCheckEnabled,\n  setForeignCheck,\n  executeForeignCheck\n};","map":{"version":3,"names":["copyData","sourceTable","targetTable","columns","undefined","map","column","join","dropOriginal","tableName","renameTable","alteredName","getTableSql","toLowerCase","isForeignCheckEnabled","setForeignCheck","enable","executeForeignCheck","module","exports"],"sources":["C:/Users/momo1/Documents/@DevPerso/Beacon/node_modules/knex/lib/dialects/sqlite3/schema/internal/sqlite-ddl-operations.js"],"sourcesContent":["function copyData(sourceTable, targetTable, columns) {\n  return `INSERT INTO \"${targetTable}\" SELECT ${\n    columns === undefined\n      ? '*'\n      : columns.map((column) => `\"${column}\"`).join(', ')\n  } FROM \"${sourceTable}\";`;\n}\n\nfunction dropOriginal(tableName) {\n  return `DROP TABLE \"${tableName}\"`;\n}\n\nfunction renameTable(tableName, alteredName) {\n  return `ALTER TABLE \"${tableName}\" RENAME TO \"${alteredName}\"`;\n}\n\nfunction getTableSql(tableName) {\n  return `SELECT type, sql FROM sqlite_master WHERE (type='table' OR (type='index' AND sql IS NOT NULL)) AND lower(tbl_name)='${tableName.toLowerCase()}'`;\n}\n\nfunction isForeignCheckEnabled() {\n  return `PRAGMA foreign_keys`;\n}\n\nfunction setForeignCheck(enable) {\n  return `PRAGMA foreign_keys = ${enable ? 'ON' : 'OFF'}`;\n}\n\nfunction executeForeignCheck() {\n  return `PRAGMA foreign_key_check`;\n}\n\nmodule.exports = {\n  copyData,\n  dropOriginal,\n  renameTable,\n  getTableSql,\n  isForeignCheckEnabled,\n  setForeignCheck,\n  executeForeignCheck,\n};\n"],"mappings":"AAAA,SAASA,QAAQA,CAACC,WAAW,EAAEC,WAAW,EAAEC,OAAO,EAAE;EACnD,OAAO,gBAAgBD,WAAW,YAChCC,OAAO,KAAKC,SAAS,GACjB,GAAG,GACHD,OAAO,CAACE,GAAG,CAAEC,MAAM,IAAK,IAAIA,MAAM,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,UAC7CN,WAAW,IAAI;AAC3B;AAEA,SAASO,YAAYA,CAACC,SAAS,EAAE;EAC/B,OAAO,eAAeA,SAAS,GAAG;AACpC;AAEA,SAASC,WAAWA,CAACD,SAAS,EAAEE,WAAW,EAAE;EAC3C,OAAO,gBAAgBF,SAAS,gBAAgBE,WAAW,GAAG;AAChE;AAEA,SAASC,WAAWA,CAACH,SAAS,EAAE;EAC9B,OAAO,uHAAuHA,SAAS,CAACI,WAAW,CAAC,CAAC,GAAG;AAC1J;AAEA,SAASC,qBAAqBA,CAAA,EAAG;EAC/B,OAAO,qBAAqB;AAC9B;AAEA,SAASC,eAAeA,CAACC,MAAM,EAAE;EAC/B,OAAO,yBAAyBA,MAAM,GAAG,IAAI,GAAG,KAAK,EAAE;AACzD;AAEA,SAASC,mBAAmBA,CAAA,EAAG;EAC7B,OAAO,0BAA0B;AACnC;AAEAC,MAAM,CAACC,OAAO,GAAG;EACfnB,QAAQ;EACRQ,YAAY;EACZE,WAAW;EACXE,WAAW;EACXE,qBAAqB;EACrBC,eAAe;EACfE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}