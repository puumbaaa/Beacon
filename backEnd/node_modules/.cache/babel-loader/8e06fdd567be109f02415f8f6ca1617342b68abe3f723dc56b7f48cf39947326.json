{"ast":null,"code":"const Formatter = require('../../formatter');\nclass MSSQL_Formatter extends Formatter {\n  // Accepts a string or array of columns to wrap as appropriate.\n  columnizeWithPrefix(prefix, target) {\n    const columns = typeof target === 'string' ? [target] : target;\n    let str = '',\n      i = -1;\n    while (++i < columns.length) {\n      if (i > 0) str += ', ';\n      str += prefix + this.wrap(columns[i]);\n    }\n    return str;\n  }\n\n  /**\n   * Returns its argument with single quotes escaped, so it can be included into a single-quoted string.\n   *\n   * For example, it converts \"has'quote\" to \"has''quote\".\n   *\n   * This assumes QUOTED_IDENTIFIER ON so it is only ' that need escaping,\n   * never \", because \" cannot be used to quote a string when that's on;\n   * otherwise we'd need to be aware of whether the string is quoted with \" or '.\n   *\n   * This assumption is consistent with the SQL Knex generates.\n   * @param {string} string\n   * @returns {string}\n   */\n  escapingStringDelimiters(string) {\n    return (string || '').replace(/'/g, \"''\");\n  }\n}\nmodule.exports = MSSQL_Formatter;","map":{"version":3,"names":["Formatter","require","MSSQL_Formatter","columnizeWithPrefix","prefix","target","columns","str","i","length","wrap","escapingStringDelimiters","string","replace","module","exports"],"sources":["C:/Users/momo1/Documents/@DevPerso/Beacon/node_modules/knex/lib/dialects/mssql/mssql-formatter.js"],"sourcesContent":["const Formatter = require('../../formatter');\n\nclass MSSQL_Formatter extends Formatter {\n  // Accepts a string or array of columns to wrap as appropriate.\n  columnizeWithPrefix(prefix, target) {\n    const columns = typeof target === 'string' ? [target] : target;\n    let str = '',\n      i = -1;\n    while (++i < columns.length) {\n      if (i > 0) str += ', ';\n      str += prefix + this.wrap(columns[i]);\n    }\n    return str;\n  }\n\n  /**\n   * Returns its argument with single quotes escaped, so it can be included into a single-quoted string.\n   *\n   * For example, it converts \"has'quote\" to \"has''quote\".\n   *\n   * This assumes QUOTED_IDENTIFIER ON so it is only ' that need escaping,\n   * never \", because \" cannot be used to quote a string when that's on;\n   * otherwise we'd need to be aware of whether the string is quoted with \" or '.\n   *\n   * This assumption is consistent with the SQL Knex generates.\n   * @param {string} string\n   * @returns {string}\n   */\n  escapingStringDelimiters(string) {\n    return (string || '').replace(/'/g, \"''\");\n  }\n}\n\nmodule.exports = MSSQL_Formatter;\n"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAE5C,MAAMC,eAAe,SAASF,SAAS,CAAC;EACtC;EACAG,mBAAmBA,CAACC,MAAM,EAAEC,MAAM,EAAE;IAClC,MAAMC,OAAO,GAAG,OAAOD,MAAM,KAAK,QAAQ,GAAG,CAACA,MAAM,CAAC,GAAGA,MAAM;IAC9D,IAAIE,GAAG,GAAG,EAAE;MACVC,CAAC,GAAG,CAAC,CAAC;IACR,OAAO,EAAEA,CAAC,GAAGF,OAAO,CAACG,MAAM,EAAE;MAC3B,IAAID,CAAC,GAAG,CAAC,EAAED,GAAG,IAAI,IAAI;MACtBA,GAAG,IAAIH,MAAM,GAAG,IAAI,CAACM,IAAI,CAACJ,OAAO,CAACE,CAAC,CAAC,CAAC;IACvC;IACA,OAAOD,GAAG;EACZ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEI,wBAAwBA,CAACC,MAAM,EAAE;IAC/B,OAAO,CAACA,MAAM,IAAI,EAAE,EAAEC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;EAC3C;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGb,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}