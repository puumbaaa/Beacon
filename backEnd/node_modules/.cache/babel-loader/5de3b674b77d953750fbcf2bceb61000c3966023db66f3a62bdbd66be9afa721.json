{"ast":null,"code":"const tail = require('lodash/tail');\nconst {\n  isString\n} = require('../../util/is');\n\n// Push a new query onto the compiled \"sequence\" stack,\n// creating a new formatter, returning the compiler.\nfunction pushQuery(query) {\n  if (!query) return;\n  if (isString(query)) {\n    query = {\n      sql: query\n    };\n  }\n  if (!query.bindings) {\n    query.bindings = this.bindingsHolder.bindings;\n  }\n  this.sequence.push(query);\n  this.formatter = this.client.formatter(this._commonBuilder);\n  this.bindings = [];\n  this.formatter.bindings = this.bindings;\n}\n\n// Used in cases where we need to push some additional column specific statements.\nfunction pushAdditional(fn) {\n  const child = new this.constructor(this.client, this.tableCompiler, this.columnBuilder);\n  fn.call(child, tail(arguments));\n  this.sequence.additional = (this.sequence.additional || []).concat(child.sequence);\n}\n\n// Unshift a new query onto the compiled \"sequence\" stack,\n// creating a new formatter, returning the compiler.\nfunction unshiftQuery(query) {\n  if (!query) return;\n  if (isString(query)) {\n    query = {\n      sql: query\n    };\n  }\n  if (!query.bindings) {\n    query.bindings = this.bindingsHolder.bindings;\n  }\n  this.sequence.unshift(query);\n  this.formatter = this.client.formatter(this._commonBuilder);\n  this.bindings = [];\n  this.formatter.bindings = this.bindings;\n}\nmodule.exports = {\n  pushAdditional,\n  pushQuery,\n  unshiftQuery\n};","map":{"version":3,"names":["tail","require","isString","pushQuery","query","sql","bindings","bindingsHolder","sequence","push","formatter","client","_commonBuilder","pushAdditional","fn","child","constructor","tableCompiler","columnBuilder","call","arguments","additional","concat","unshiftQuery","unshift","module","exports"],"sources":["C:/Users/momo1/Documents/@DevPerso/Beacon/node_modules/knex/lib/schema/internal/helpers.js"],"sourcesContent":["const tail = require('lodash/tail');\nconst { isString } = require('../../util/is');\n\n// Push a new query onto the compiled \"sequence\" stack,\n// creating a new formatter, returning the compiler.\nfunction pushQuery(query) {\n  if (!query) return;\n  if (isString(query)) {\n    query = { sql: query };\n  }\n  if (!query.bindings) {\n    query.bindings = this.bindingsHolder.bindings;\n  }\n  this.sequence.push(query);\n\n  this.formatter = this.client.formatter(this._commonBuilder);\n  this.bindings = [];\n  this.formatter.bindings = this.bindings;\n}\n\n// Used in cases where we need to push some additional column specific statements.\nfunction pushAdditional(fn) {\n  const child = new this.constructor(\n    this.client,\n    this.tableCompiler,\n    this.columnBuilder\n  );\n  fn.call(child, tail(arguments));\n  this.sequence.additional = (this.sequence.additional || []).concat(\n    child.sequence\n  );\n}\n\n// Unshift a new query onto the compiled \"sequence\" stack,\n// creating a new formatter, returning the compiler.\nfunction unshiftQuery(query) {\n  if (!query) return;\n  if (isString(query)) {\n    query = { sql: query };\n  }\n  if (!query.bindings) {\n    query.bindings = this.bindingsHolder.bindings;\n  }\n  this.sequence.unshift(query);\n\n  this.formatter = this.client.formatter(this._commonBuilder);\n  this.bindings = [];\n  this.formatter.bindings = this.bindings;\n}\n\nmodule.exports = {\n  pushAdditional,\n  pushQuery,\n  unshiftQuery,\n};\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,aAAa,CAAC;AACnC,MAAM;EAAEC;AAAS,CAAC,GAAGD,OAAO,CAAC,eAAe,CAAC;;AAE7C;AACA;AACA,SAASE,SAASA,CAACC,KAAK,EAAE;EACxB,IAAI,CAACA,KAAK,EAAE;EACZ,IAAIF,QAAQ,CAACE,KAAK,CAAC,EAAE;IACnBA,KAAK,GAAG;MAAEC,GAAG,EAAED;IAAM,CAAC;EACxB;EACA,IAAI,CAACA,KAAK,CAACE,QAAQ,EAAE;IACnBF,KAAK,CAACE,QAAQ,GAAG,IAAI,CAACC,cAAc,CAACD,QAAQ;EAC/C;EACA,IAAI,CAACE,QAAQ,CAACC,IAAI,CAACL,KAAK,CAAC;EAEzB,IAAI,CAACM,SAAS,GAAG,IAAI,CAACC,MAAM,CAACD,SAAS,CAAC,IAAI,CAACE,cAAc,CAAC;EAC3D,IAAI,CAACN,QAAQ,GAAG,EAAE;EAClB,IAAI,CAACI,SAAS,CAACJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;AACzC;;AAEA;AACA,SAASO,cAAcA,CAACC,EAAE,EAAE;EAC1B,MAAMC,KAAK,GAAG,IAAI,IAAI,CAACC,WAAW,CAChC,IAAI,CAACL,MAAM,EACX,IAAI,CAACM,aAAa,EAClB,IAAI,CAACC,aACP,CAAC;EACDJ,EAAE,CAACK,IAAI,CAACJ,KAAK,EAAEf,IAAI,CAACoB,SAAS,CAAC,CAAC;EAC/B,IAAI,CAACZ,QAAQ,CAACa,UAAU,GAAG,CAAC,IAAI,CAACb,QAAQ,CAACa,UAAU,IAAI,EAAE,EAAEC,MAAM,CAChEP,KAAK,CAACP,QACR,CAAC;AACH;;AAEA;AACA;AACA,SAASe,YAAYA,CAACnB,KAAK,EAAE;EAC3B,IAAI,CAACA,KAAK,EAAE;EACZ,IAAIF,QAAQ,CAACE,KAAK,CAAC,EAAE;IACnBA,KAAK,GAAG;MAAEC,GAAG,EAAED;IAAM,CAAC;EACxB;EACA,IAAI,CAACA,KAAK,CAACE,QAAQ,EAAE;IACnBF,KAAK,CAACE,QAAQ,GAAG,IAAI,CAACC,cAAc,CAACD,QAAQ;EAC/C;EACA,IAAI,CAACE,QAAQ,CAACgB,OAAO,CAACpB,KAAK,CAAC;EAE5B,IAAI,CAACM,SAAS,GAAG,IAAI,CAACC,MAAM,CAACD,SAAS,CAAC,IAAI,CAACE,cAAc,CAAC;EAC3D,IAAI,CAACN,QAAQ,GAAG,EAAE;EAClB,IAAI,CAACI,SAAS,CAACJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;AACzC;AAEAmB,MAAM,CAACC,OAAO,GAAG;EACfb,cAAc;EACdV,SAAS;EACToB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}